name: Publish Rust Crate to crates.io

env:
  CARGO_TERM_COLOR: always
  RUST_VERSION: 1.88.0
  CARGO_REGISTRIES_CRATES_IO_PROTOCOL: sparse

on:
  push:
    tags:
      - 'ydb-*'

permissions:
  contents: write

jobs:
  publishCrate:
    name: Publish Crate to crates.io
    runs-on: ubuntu-24.04
    env:
      GIT_EMAIL: ${{ github.actor }}@users.noreply.github.com
      CARGO_REGISTRY_TOKEN: ${{ secrets.CARGO_REGISTRY_TOKEN }}

    outputs:
      crate-version: ${{ steps.get-version.outputs.crate-version }}
      crate-name: ${{ steps.params.outputs.crate }}

    steps:
      - name: Install Rust
        uses: dtolnay/rust-toolchain@v1
        with:
          toolchain: ${{ env.RUST_VERSION }}

      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: true
          fetch-depth: 0  # Ensure full history so tags are available

      - name: Extract crate and version from tag
        id: params
        run: |
          TAG="${GITHUB_REF_NAME}"
          CRATE="${TAG%%-*}"
          VERSION="${TAG#*-}"
          echo "crate=$CRATE" >> "$GITHUB_OUTPUT"
          echo "version=$VERSION" >> "$GITHUB_OUTPUT"

      - name: Run publish script
        run: ./.github/scripts/version-up.sh "${{ steps.params.outputs.crate }}" "${{ steps.params.outputs.version }}" "$GIT_EMAIL"

      - name: Output version for release
        id: get-version
        run: |
          if [[ -f .crate-version ]]; then
            echo "crate-version=$(cat .crate-version)" >> "$GITHUB_OUTPUT"
          fi

  release:
    name: Create GitHub Release
    if: needs.publishCrate.outputs.crate-version != '' && needs.publishCrate.outputs.crate-name == 'ydb'
    needs: publishCrate
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Create GitHub Release
        env:
          GITHUB_TOKEN: ${{ secrets.RELEASE_TOKEN }}
        run: |
          TAG="ydb-${{ needs.publishCrate.outputs.crate-version }}"
          gh release create "$TAG" \
            --title "$TAG" \
            --generate-notes
